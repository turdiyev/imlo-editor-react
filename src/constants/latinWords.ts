import lzString from "lz-string"
import json from "./latin_words.json"
import {WordObject} from "../type/WordObjectType"

const words = `…`
export const LATIN_IMLO_DICT: string = lzString.compressToBase64(JSON.stringify(json));
// export const LATIN_IMLO_BASE64:string = lzString.compressToBase64(JSON.stringify(words));
// export const LATIN_IMLO_DICT:any =  lzString.decompressFromBase64(words)

export const compressToBase64 = (jsonValue: any):string => {
    return lzString.compressToBase64(JSON.stringify(jsonValue))
}
export const decompressFromBase64 = (str: string): WordObject[] => {
    return JSON.parse(lzString.decompressFromBase64(str))
}

export const test = () => {
    const txt: string = compressToBase64(json);

    return decompressFromBase64(txt)
}